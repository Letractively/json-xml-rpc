#summary Implementation details and usage documentation for PHP RPC implementations.
#labels Featured

= PHP Server =

_This is a draft._

This server implementation is implemented as the class "RPCServer"; it is available in both PHP 4 and PHP 5. The class is implemented as a singleton. Since PHP 4 does not support singletons, authors using the PHP 4 version should restrict themselves to using the RPCServer class's `getInstance` method instead of constructing a new instance.

==Usage==
{{{
if(!class_exists('DateTime'))
   require_once('DateTime.class.php');
require_once('RPCServer.class.php');
$server = RPCServer::getInstance(); //note that the RPCServer class is a singleton
function getTemp($zipCode){
   //...
   return $row['temperature'];
}
$server->addMethod("getTemp");
$server->processRequest(); //required in PHP4, otherwise called automatically by the destructor in PHP 5
}}}
== Public Class Methods ==
 * preserveDefaultParameters($defaultParametersPreserved)
 * convertISO8601Strings($iso8601StringsConverted)
 * useIncludedFunctions($isUsingIncludedFunctions)
 * setDefaultResponseType($type)
 * setJSONDateFormat($formatName)
 * setDBResultIndexType($indexType)
 * setDebugMode($bool)
 * addMethod($privateProcName, $publicMethodName)
 * processRequest()